apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion compileSdk
    buildToolsVersion buildTools

    defaultConfig {
        minSdkVersion minSdk
        targetSdkVersion targetSdk
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
    }

    signingConfigs {
        releaseSigningConfig {
            storeFile rootProject.file("app/apps_keystore.jks")
            storePassword System.getProperty("APPCENTER_KEYSTORE_PASSWORD")
            keyAlias System.getProperty("APPCENTER_KEY_ALIAS")
            keyPassword System.getProperty("APPCENTER_KEY_PASSWORD")
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigningConfig
        }
    }

    flavorDimensions "default"

    productFlavors {
        rac1 {
            applicationId "cat.xojan.random1"
            versionCode 40
            versionName "3.4.0"
            buildConfigField "String", "BASE_URL", "\"http://api.audioteca.rac1.cat/api/app/\""
        }
        catradio {
            applicationId "cat.xojan.randomcat"
            versionCode 3
            versionName "0.3.0"
            buildConfigField "String", "BASE_URL", "\"http://api.ccma.cat/\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            returnDefaultValues true
        }

    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

androidExtensions {
    experimental true
}

kapt {
    useBuildCache = true
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://clojars.org/repo/" }
}

dependencies {
    // Android support
    implementation "com.android.support:appcompat-v7:$supportLib"
    implementation "com.android.support:design:$supportLib"
    implementation "com.android.support:support-media-compat:$supportLib"
    implementation "com.android.support:support-v4:$supportLib"

    // Apache
    testImplementation 'org.apache.directory.studio:org.apache.commons.io:2.4'

    // Crashlytics
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // Dagger 2
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger:$dagger"

    // ExoPlayer
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer"
    implementation "com.google.android.exoplayer:extension-okhttp:$exoplayer"

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebase"

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.7.1'
    kapt 'com.github.bumptech.glide:compiler:4.7.1'

    // Hamcrest
    testImplementation 'org.hamcrest:hamcrest-library:1.3'

    // JUnit
    testImplementation "junit:junit:$jUnit"

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanary"

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.10.0'

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi"
    implementation "com.squareup.moshi:moshi-adapters:$moshi"

    // Multidex
    implementation 'com.android.support:multidex:1.0.3'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okhttp"

    // Rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'

    // RxLint
    debugImplementation 'nl.littlerobots.rxlint:rxlint:1.6'
}

apply plugin: 'com.google.gms.google-services'